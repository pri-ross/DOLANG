#define F_CPU 16000000UL
#include <xc.h>
#include <avr/io.h>
#include <util/delay.h>
#include <avr/interrupt.h>
#include <stdio.h>  

#define Sensor0 0
#define BAUD 9600
#define BRC ((F_CPU/16/BAUD)-1)

void setupADC() {
	ADMUX |= (1<<REFS0);
	ADMUX &= ~(1<<ADLAR);
	ADCSRA |= (1<<ADPS2) | (1<<ADPS1);
	ADCSRA |= (1<<ADEN);
}

uint16_t readADC(uint8_t channel) {
	ADMUX = (ADMUX & 0xF0) | (channel & 0x0F);
	ADCSRA |= (1 << ADSC);
	while (ADCSRA & (1<<ADSC));
	return ADC;
}

void UART_init() {
	UBRR0H = (BRC >> 8);
	UBRR0L = BRC;
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
}

void UART_sendChar(char data) {
	while (!(UCSR0A & (1 << UDRE0)));
	UDR0 = data;
}

void UART_sendString(const char* str) {
	while (*str) {
		UART_sendChar(*str++);
	}
}

void UART_sendADCValue(uint16_t adcValue) {
	char buffer[16];
	sprintf(buffer, "temperatura : %d\r", adcValue);
	UART_sendString(buffer);
}

void fast_pwm_init(void) {
	TCCR1A = (1 << WGM11) | (1 << COM1A1) | (1 << COM1B1);
	TCCR1B = (1 << WGM13) | (1 << WGM12) | (1 << CS11);
	ICR1 = 4999;
	DDRB |= (1 << PB1) | (1 << PB2);
}

int main() {
	UART_init();
	fast_pwm_init();
	setupADC();

	uint16_t adcValue;

	while (1) {
		adcValue = readADC(Sensor0);
		float voltage = adcValue * (5.0 / 1023.0);

		OCR1A = adcValue / 4;
		OCR1B = 255 - (adcValue / 4);
		
		_delay_ms(10);

		UART_sendADCValue(adcValue);
	
	}
}

#include <avr/io.h>
#include <util/delay.h>
#include <stdint.h>

#define F_CPU 16000000UL 

// Configuración UART
void UART_init(uint16_t ubrr) {
    UBRR0H = (unsigned char) (ubrr >> 8);
    UBRR0L = (unsigned char) ubrr;
    UCSR0B = (1 << RXEN0) | (1 << TXEN0);  
    UCSR0C = (1 << UCSZ01) | (1 << UCSZ00); 
}

void UART_sendChar(char data) {
    while (!(UCSR0A & (1 << UDRE0))); 
    UDR0 = data;
}

void UART_sendString(const char *str) {
    while (*str) {
        UART_sendChar(*str++);
    }
}

// Configuración ADC
void ADC_init() {
    ADMUX = (1 << REFS0); 
    ADCSRA = (1 << ADEN) | (1 << ADPS2) | (1 << ADPS1);  
}

uint16_t ADC_read(uint8_t channel) {
    ADMUX = (ADMUX & 0xF0) | (channel & 0x0F);  
    ADCSRA |= (1 << ADSC); 
    while (ADCSRA & (1 << ADSC));  
    return ADC;
}

int main(void) {
    uint16_t adcValue1, adcValue2;
    int16_t error;  

    UART_init(103);  // Baud rate de 9600 para F_CPU = 16 MHz
    ADC_init();

    while (1) {
        adcValue1 = ADC_read(0);  // Leer el ADC en el canal 0
        adcValue2 = ADC_read(1);  // Leer el ADC en el canal 1
        error = adcValue1 - adcValue2;

        // Enviar los valores ADC por UART en un rango de 0 a 1023
        char buffer[64];
        snprintf(buffer, sizeof(buffer), "Pot1: %u, Pot2: %u, Error: %d\n", adcValue1, adcValue2, error);
        UART_sendString(buffer);

        _delay_ms(500);  
    }
    return 0;
}

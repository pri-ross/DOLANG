.include "m328pdef.inc"   ; Incluir definiciones para el ATmega328P
.org 0x00                 ; Establecer el inicio del c贸digo en la direcci贸n 0x00

rjmp RESET                ; Saltar a la etiqueta RESET al iniciar

.org 0x20                 ; Comienzo de la secci贸n de c贸digo
RESET:
    ldi r16, 0xFF         ; Cargar el registro r16 con 0xFF (todos los pines del puerto como salida)
    out DDRB, r16         ; Configurar todos los pines del PORTB como salidas

main_loop:
    ldi r16, 0x01         ; Cargar r16 con el valor inicial 0x01 (primer LED encendido)
    out PORTB, r16        ; Enviar el valor al puerto PORTB
    rcall delay           ; Llamar a la subrutina de retardo

shift_loop:
    lsl r16               ; Desplazar a la izquierda el valor en r16 (mueve el bit encendido al siguiente pin)
    out PORTB, r16        ; Enviar el nuevo valor al puerto PORTB
    rcall delay           ; Llamar a la subrutina de retardo
    cpi r16, 0x00         ; Comparar el valor de r16 con 0x00 (todos los LEDs apagados)
    brne shift_loop       ; Si no es igual, repetir el ciclo

    rjmp main_loop        ; Reiniciar el ciclo desde el primer LED

; Subrutina de retardo ajustada para mayor tiempo de encendido
delay:
    ldi r18, 0x80         ; Cargar r18 con un valor mayor para un mayor tiempo de encendido
    ldi r19, 0xFF         ; Cargar r19 con un valor mayor para un mayor tiempo de encendido
delay_loop:
    dec r19               ; Decrementar r19
    brne delay_loop       ; Si r19 no es cero, repetir el ciclo
    dec r18               ; Decrementar r18
    brne delay_loop       ; Si r18 no es cero, repetir el ciclo
    ret                   ; Retornar de la subrutina de retardo

